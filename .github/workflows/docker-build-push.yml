name: Build and Push Multi-Arch Docker Images

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
      - 'TODO.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
      - 'TODO.md'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_BACKEND: tiritibambix/itransfer-backend
  IMAGE_FRONTEND: tiritibambix/itransfer-frontend

jobs:
  setup:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from Git
        id: version
        run: echo "version=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  audit:
    runs-on: ubuntu-24.04
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check dependencies with pip-audit
        run: |
          docker run --rm -v $(pwd):/app -w /app python:3.10-slim sh -c " \
          python -m venv venv && \
          . venv/bin/activate && \
          pip install --upgrade pip setuptools && \
          pip install pip-audit && \
          pip-audit"

  build-push-backend:
    runs-on: ubuntu-24.04
    needs: [setup, audit]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push multi-arch backend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:${{ needs.setup.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  build-push-frontend:
    runs-on: ubuntu-24.04
    needs: [setup, audit]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push multi-arch frontend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:${{ needs.setup.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  update-dockerhub-description:
    runs-on: ubuntu-24.04
    needs: [build-push-backend, build-push-frontend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Update Backend Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.IMAGE_BACKEND }}
          readme-filepath: ./README.md
          
      - name: Update Frontend Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.IMAGE_FRONTEND }}
          readme-filepath: ./README.md
